{"version":3,"sources":["jsdelivr-header.js","/npm/easytimer.js@4.6.0/dist/easytimer.js"],"names":[],"mappings":"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","file":"/npm/easytimer.js@4.6.0/dist/easytimer.js/+esm","sourceRoot":"","sourcesContent":["/**\n * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.\n * Original file: /npm/easytimer.js@4.6.0/dist/easytimer.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n","/**\n * easytimer.js\n * Generated: 2023-08-28\n * Version: 4.6.0\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.easytimer = {}));\n})(this, (function (exports) { 'use strict';\n\n  function ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n      var o = Object.getOwnPropertySymbols(e);\n      r && (o = o.filter(function (r) {\n        return Object.getOwnPropertyDescriptor(e, r).enumerable;\n      })), t.push.apply(t, o);\n    }\n    return t;\n  }\n  function _objectSpread2(e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var t = null != arguments[r] ? arguments[r] : {};\n      r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n        _defineProperty(e, r, t[r]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n      });\n    }\n    return e;\n  }\n  function _typeof(o) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n      return typeof o;\n    } : function (o) {\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  function leftPadding(string, padLength, character) {\n    var i;\n    var characters = '';\n    string = typeof string === 'number' ? String(string) : string;\n    if (string.length > padLength) {\n      return string;\n    }\n    for (i = 0; i < padLength; i = i + 1) {\n      characters += String(character);\n    }\n    return (characters + string).slice(-characters.length);\n  }\n\n  function TimeCounter() {\n    this.reset();\n  }\n\n  /**\n   * [toString convert the counted values on a string]\n   * @param  {array} units           [array with the units to display]\n   * @param  {string} separator       [separator of the units]\n   * @param  {number} leftZeroPadding [number of zero padding]\n   * @return {string}                 [result string]\n   */\n  TimeCounter.prototype.toString = function () {\n    var units = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['hours', 'minutes', 'seconds'];\n    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ':';\n    var leftZeroPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n    units = units || ['hours', 'minutes', 'seconds'];\n    separator = separator || ':';\n    leftZeroPadding = leftZeroPadding || 2;\n    var arrayTime = [];\n    var i;\n    for (i = 0; i < units.length; i = i + 1) {\n      if (this[units[i]] !== undefined) {\n        if (units[i] === 'secondTenths') {\n          arrayTime.push(this[units[i]]);\n        } else {\n          arrayTime.push(leftPadding(this[units[i]], leftZeroPadding, '0'));\n        }\n      }\n    }\n    return arrayTime.join(separator);\n  };\n\n  /**\n   * [reset reset counter]\n   */\n  TimeCounter.prototype.reset = function () {\n    this.secondTenths = 0;\n    this.seconds = 0;\n    this.minutes = 0;\n    this.hours = 0;\n    this.days = 0;\n  };\n\n  function EventEmitter() {\n    this.events = {};\n  }\n  EventEmitter.prototype.on = function (event, listener) {\n    var _this = this;\n    if (!Array.isArray(this.events[event])) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n    return function () {\n      return _this.removeListener(event, listener);\n    };\n  };\n  EventEmitter.prototype.removeListener = function (event, listener) {\n    if (Array.isArray(this.events[event])) {\n      var eventIndex = this.events[event].indexOf(listener);\n      if (eventIndex > -1) {\n        this.events[event].splice(eventIndex, 1);\n      }\n    }\n  };\n  EventEmitter.prototype.removeAllListeners = function (event) {\n    if (!event) {\n      this.events = {};\n    } else if (Array.isArray(this.events[event])) {\n      this.events[event] = [];\n    }\n  };\n  EventEmitter.prototype.emit = function (event) {\n    var _this2 = this;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (Array.isArray(this.events[event])) {\n      this.events[event].forEach(function (listener) {\n        return listener.apply(_this2, args);\n      });\n    }\n  };\n\n  /*\n   * General functions, variables and constants\n   */\n  var SECOND_TENTHS_PER_SECOND = 10;\n  var SECONDS_PER_MINUTE = 60;\n  var MINUTES_PER_HOUR = 60;\n  var HOURS_PER_DAY = 24;\n  var SECOND_TENTHS_POSITION = 0;\n  var SECONDS_POSITION = 1;\n  var MINUTES_POSITION = 2;\n  var HOURS_POSITION = 3;\n  var DAYS_POSITION = 4;\n  var SECOND_TENTHS = 'secondTenths';\n  var SECONDS = 'seconds';\n  var MINUTES = 'minutes';\n  var HOURS = 'hours';\n  var DAYS = 'days';\n  var VALID_INPUT_VALUES = [SECOND_TENTHS, SECONDS, MINUTES, HOURS, DAYS];\n  var unitsInMilliseconds = {\n    secondTenths: 100,\n    seconds: 1000,\n    minutes: 60000,\n    hours: 3600000,\n    days: 86400000\n  };\n  var groupedUnits = {\n    secondTenths: SECOND_TENTHS_PER_SECOND,\n    seconds: SECONDS_PER_MINUTE,\n    minutes: MINUTES_PER_HOUR,\n    hours: HOURS_PER_DAY\n  };\n  function mod(number, module) {\n    return (number % module + module) % module;\n  }\n\n  /**\n   * [Timer Timer/Chronometer/Countdown compatible with AMD and NodeJS.\n   * Can update time values with different time intervals: tenth of seconds,\n   * seconds, minutes and hours.]\n   */\n  function Timer() {\n    var defaultParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    /*\n    * PRIVATE variables and Functions\n    */\n    var counters = new TimeCounter();\n    var totalCounters = new TimeCounter();\n    var intervalId;\n    var eventEmitter = new EventEmitter();\n    var running = false;\n    var paused = false;\n    var precision;\n    var timerTypeFactor;\n    var customCallback;\n    var timerConfig = {};\n    var currentParams;\n    var targetValues;\n    var startValues;\n    var countdown;\n    var startingDate;\n    var targetDate;\n    var eventData = {\n      detail: {\n        timer: this\n      }\n    };\n    setParams(defaultParams);\n    function updateCounters(precision, roundedValue) {\n      var unitsPerGroup = groupedUnits[precision];\n      totalCounters[precision] = roundedValue;\n      if (precision === DAYS) {\n        counters[precision] = Math.abs(roundedValue);\n      } else if (roundedValue >= 0) {\n        counters[precision] = mod(roundedValue, unitsPerGroup);\n      } else {\n        counters[precision] = mod(unitsPerGroup - mod(roundedValue, unitsPerGroup), unitsPerGroup);\n      }\n    }\n    function updateDays(value) {\n      return updateUnitByPrecision(value, DAYS);\n    }\n    function updateHours(value) {\n      return updateUnitByPrecision(value, HOURS);\n    }\n    function updateMinutes(value) {\n      return updateUnitByPrecision(value, MINUTES);\n    }\n    function updateSeconds(value) {\n      return updateUnitByPrecision(value, SECONDS);\n    }\n    function updateSecondTenths(value) {\n      return updateUnitByPrecision(value, SECOND_TENTHS);\n    }\n    function updateUnitByPrecision(value, precision) {\n      var previousValue = totalCounters[precision];\n      updateCounters(precision, calculateIntegerUnitQuotient(value, unitsInMilliseconds[precision]));\n      return totalCounters[precision] !== previousValue;\n    }\n    function stopTimerAndResetCounters() {\n      stopTimer();\n      resetCounters();\n    }\n    function stopTimer() {\n      clearInterval(intervalId);\n      intervalId = undefined;\n      running = false;\n      paused = false;\n    }\n    function setParamsAndStartTimer(params) {\n      if (!isPaused()) {\n        setParams(params);\n      } else {\n        startingDate = calculateStartingDate();\n        targetValues = setTarget(currentParams.target);\n      }\n      startTimer();\n    }\n    function startTimer() {\n      var interval = unitsInMilliseconds[precision];\n      if (isTargetAchieved(roundTimestamp(Date.now()))) {\n        return;\n      }\n      intervalId = setInterval(updateTimerAndDispatchEvents, interval);\n      running = true;\n      paused = false;\n    }\n    function calculateStartingDate() {\n      return roundTimestamp(Date.now()) - totalCounters.secondTenths * unitsInMilliseconds[SECOND_TENTHS] * timerTypeFactor;\n    }\n    function updateTimerAndDispatchEvents() {\n      var currentTime = roundTimestamp(Date.now());\n      var valuesUpdated = updateTimer();\n      dispatchEvents(valuesUpdated);\n      customCallback(eventData.detail.timer);\n      if (isTargetAchieved(currentTime)) {\n        stop();\n        dispatchEvent('targetAchieved', eventData);\n      }\n    }\n    function updateTimer() {\n      var currentTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : roundTimestamp(Date.now());\n      var elapsedTime = timerTypeFactor > 0 ? currentTime - startingDate : startingDate - currentTime;\n      var valuesUpdated = {};\n      valuesUpdated[SECOND_TENTHS] = updateSecondTenths(elapsedTime);\n      valuesUpdated[SECONDS] = updateSeconds(elapsedTime);\n      valuesUpdated[MINUTES] = updateMinutes(elapsedTime);\n      valuesUpdated[HOURS] = updateHours(elapsedTime);\n      valuesUpdated[DAYS] = updateDays(elapsedTime);\n      return valuesUpdated;\n    }\n    function roundTimestamp(timestamp) {\n      return Math.floor(timestamp / unitsInMilliseconds[precision]) * unitsInMilliseconds[precision];\n    }\n    function dispatchEvents(valuesUpdated) {\n      if (valuesUpdated[SECOND_TENTHS]) {\n        dispatchEvent('secondTenthsUpdated', eventData);\n      }\n      if (valuesUpdated[SECONDS]) {\n        dispatchEvent('secondsUpdated', eventData);\n      }\n      if (valuesUpdated[MINUTES]) {\n        dispatchEvent('minutesUpdated', eventData);\n      }\n      if (valuesUpdated[HOURS]) {\n        dispatchEvent('hoursUpdated', eventData);\n      }\n      if (valuesUpdated[DAYS]) {\n        dispatchEvent('daysUpdated', eventData);\n      }\n    }\n    function isTargetAchieved(currentDate) {\n      return targetValues instanceof Array && currentDate >= targetDate;\n    }\n    function resetCounters() {\n      counters.reset();\n      totalCounters.reset();\n    }\n    function setParams(params) {\n      params = params || {};\n      precision = checkPrecision(params.precision);\n      customCallback = typeof params.callback === 'function' ? params.callback : function () {};\n      countdown = params.countdown === true;\n      timerTypeFactor = countdown === true ? -1 : 1;\n      if (_typeof(params.startValues) === 'object') {\n        setStartValues(params.startValues);\n      } else {\n        startValues = null;\n      }\n      startingDate = calculateStartingDate();\n      updateTimer();\n      if (_typeof(params.target) === 'object') {\n        targetValues = setTarget(params.target);\n      } else if (countdown) {\n        params.target = {\n          seconds: 0\n        };\n        targetValues = setTarget(params.target);\n      } else {\n        targetValues = null;\n      }\n      timerConfig = {\n        precision: precision,\n        callback: customCallback,\n        countdown: _typeof(params) === 'object' && params.countdown === true,\n        target: targetValues,\n        startValues: startValues\n      };\n      currentParams = params;\n    }\n    function checkPrecision(precision) {\n      precision = typeof precision === 'string' ? precision : SECONDS;\n      if (!isValidInputValue(precision)) {\n        throw new Error(\"Error in precision parameter: \".concat(precision, \" is not a valid value\"));\n      }\n      return precision;\n    }\n    function isValidInputValue(value) {\n      return VALID_INPUT_VALUES.indexOf(value) >= 0;\n    }\n    function configInputValues(inputValues) {\n      var values;\n      if (_typeof(inputValues) === 'object') {\n        if (inputValues instanceof Array) {\n          if (inputValues.length !== 5) {\n            throw new Error('Array size not valid');\n          }\n          values = inputValues;\n        } else {\n          for (var value in inputValues) {\n            if (VALID_INPUT_VALUES.indexOf(value) < 0) {\n              throw new Error(\"Error in startValues or target parameter: \".concat(value, \" is not a valid input value\"));\n            }\n          }\n          values = [inputValues.secondTenths || 0, inputValues.seconds || 0, inputValues.minutes || 0, inputValues.hours || 0, inputValues.days || 0];\n        }\n      }\n      values = values.map(function (value) {\n        return parseInt(value, 10);\n      });\n      var secondTenths = values[SECOND_TENTHS_POSITION];\n      var seconds = values[SECONDS_POSITION] + calculateIntegerUnitQuotient(secondTenths, SECOND_TENTHS_PER_SECOND);\n      var minutes = values[MINUTES_POSITION] + calculateIntegerUnitQuotient(seconds, SECONDS_PER_MINUTE);\n      var hours = values[HOURS_POSITION] + calculateIntegerUnitQuotient(minutes, MINUTES_PER_HOUR);\n      var days = values[DAYS_POSITION] + calculateIntegerUnitQuotient(hours, HOURS_PER_DAY);\n      values[SECOND_TENTHS_POSITION] = secondTenths % SECOND_TENTHS_PER_SECOND;\n      values[SECONDS_POSITION] = seconds % SECONDS_PER_MINUTE;\n      values[MINUTES_POSITION] = minutes % MINUTES_PER_HOUR;\n      values[HOURS_POSITION] = hours % HOURS_PER_DAY;\n      values[DAYS_POSITION] = days;\n      return values;\n    }\n    function calculateIntegerUnitQuotient(unit, divisor) {\n      var quotient = unit / divisor;\n      return quotient < 0 ? Math.ceil(quotient) : Math.floor(quotient);\n    }\n    function setTarget(inputTarget) {\n      if (!inputTarget) {\n        return;\n      }\n      targetValues = configInputValues(inputTarget);\n      var targetCounter = calculateTotalCounterFromValues(targetValues);\n      targetDate = startingDate + targetCounter.secondTenths * unitsInMilliseconds[SECOND_TENTHS] * timerTypeFactor;\n      return targetValues;\n    }\n    function setStartValues(inputStartValues) {\n      startValues = configInputValues(inputStartValues);\n      counters.secondTenths = startValues[SECOND_TENTHS_POSITION];\n      counters.seconds = startValues[SECONDS_POSITION];\n      counters.minutes = startValues[MINUTES_POSITION];\n      counters.hours = startValues[HOURS_POSITION];\n      counters.days = startValues[DAYS_POSITION];\n      totalCounters = calculateTotalCounterFromValues(startValues, totalCounters);\n    }\n    function calculateTotalCounterFromValues(values, outputCounter) {\n      var total = outputCounter || {};\n      total.days = values[DAYS_POSITION];\n      total.hours = total.days * HOURS_PER_DAY + values[HOURS_POSITION];\n      total.minutes = total.hours * MINUTES_PER_HOUR + values[MINUTES_POSITION];\n      total.seconds = total.minutes * SECONDS_PER_MINUTE + values[SECONDS_POSITION];\n      total.secondTenths = total.seconds * SECOND_TENTHS_PER_SECOND + values[[SECOND_TENTHS_POSITION]];\n      return total;\n    }\n\n    /*\n     * PUBLIC functions\n     */\n\n    /**\n     * [stop stops the timer and resets the counters. Dispatch stopped event]\n     */\n    function stop() {\n      stopTimerAndResetCounters();\n      dispatchEvent('stopped', eventData);\n    }\n\n    /**\n     * [stop stops and starts the timer. Dispatch stopped event]\n     */\n    function reset() {\n      stopTimerAndResetCounters();\n      setParamsAndStartTimer(currentParams);\n      dispatchEvent('reset', eventData);\n    }\n\n    /**\n     * [start starts the timer configured by the params object. Dispatch started event]\n     * @param  {object} params [Configuration parameters]\n     */\n    function start() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      params = _objectSpread2(_objectSpread2({}, defaultParams), params);\n      if (isRunning()) {\n        return;\n      }\n      setParamsAndStartTimer(params);\n      dispatchEvent('started', eventData);\n    }\n\n    /**\n     * [pause stops the timer without resetting the counters. The timer it can be restarted with start function.\n     * Dispatch paused event]\n     * @return {type} [description]\n     */\n    function pause() {\n      stopTimer();\n      paused = true;\n      dispatchEvent('paused', eventData);\n    }\n\n    /**\n     * [addEventListener Adds event listener to the timer]\n     * @param {string} eventType      [event to listen]\n     * @param {function} listener   [the event listener function]\n     */\n    function addEventListener(eventType, listener) {\n      eventEmitter.on(eventType, listener);\n    }\n\n    /**\n     * [removeEventListener Removes event listener to the timer]\n     * @param  {string} eventType    [event to remove listener]\n     * @param  {function} listener [listener to remove]\n     */\n    function removeEventListener(eventType, listener) {\n      eventEmitter.removeListener(eventType, listener);\n    }\n\n    /**\n     * [removeAllEventListeners Removes all events listeners for the given type, no type to remove all types]\n     * @param  {string} [eventType]  [event to remove listener]\n     */\n    function removeAllEventListeners(eventType) {\n      eventEmitter.removeAllListeners(eventType);\n    }\n\n    /**\n     * [dispatchEvent dispatches an event]\n     * @param  {string} eventType [event to dispatch]\n     * @param data\n     */\n    function dispatchEvent(eventType, data) {\n      eventEmitter.emit(eventType, data);\n    }\n\n    /**\n     * [isRunning return true if the timer is running]\n     * @return {Boolean}\n     */\n    function isRunning() {\n      return running;\n    }\n\n    /**\n     * [isPaused returns true if the timer is paused]\n     * @return {Boolean}\n     */\n    function isPaused() {\n      return paused;\n    }\n\n    /**\n     * [getTimeValues returns the counter with the current timer values]\n     * @return {TimeCounter}\n     */\n    function getTimeValues() {\n      return counters;\n    }\n\n    /**\n     * [getTotalTimeValues returns the counter with the current timer total values]\n     * @return {TimeCounter}\n     */\n    function getTotalTimeValues() {\n      return totalCounters;\n    }\n\n    /**\n     * [getConfig returns the configuration parameters]\n     * @return {type}\n     */\n    function getConfig() {\n      return timerConfig;\n    }\n\n    /**\n     * Public API\n     * Definition of Timer instance public functions\n     */\n    if (typeof this !== 'undefined') {\n      this.start = start;\n      this.pause = pause;\n      this.stop = stop;\n      this.reset = reset;\n      this.isRunning = isRunning;\n      this.isPaused = isPaused;\n      this.getTimeValues = getTimeValues;\n      this.getTotalTimeValues = getTotalTimeValues;\n      this.getConfig = getConfig;\n      this.addEventListener = addEventListener;\n      this.on = addEventListener;\n      this.removeEventListener = removeEventListener;\n      this.removeAllEventListeners = removeAllEventListeners;\n      this.off = removeEventListener;\n    }\n  }\n\n  exports.Timer = Timer;\n  exports.default = Timer;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
